---
---

<div class="quote-modal" id="quoteModal">
  <div class="modal-overlay" id="modalOverlay"></div>
  <div class="modal-content">
    <button class="modal-close" id="modalClose" aria-label="Close modal">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>

    <div class="modal-header">
      <h2>Get Your Free Measure & Quote</h2>
      <p>One of our design specialists will contact you within 24 hours to discuss your project and arrange a free on-site measure & quote.</p>
    </div>

    <form class="modal-form" id="modalQuoteForm">
      <div class="form-row">
        <div class="form-group">
          <label for="modal-name">Name *</label>
          <input type="text" id="modal-name" name="name" required>
        </div>
        <div class="form-group">
          <label for="modal-phone">Phone *</label>
          <input type="tel" id="modal-phone" name="phone" required>
        </div>
      </div>

      <div class="form-row">
        <div class="form-group">
          <label for="modal-email">Email *</label>
          <input type="email" id="modal-email" name="email" required>
        </div>
        <div class="form-group">
          <label for="modal-suburb">Suburb *</label>
          <input type="text" id="modal-suburb" name="suburb" required>
        </div>
      </div>

      <div class="form-group">
        <label for="modal-product">Product Interest *</label>
        <select id="modal-product" name="product" required>
          <option value="">Select a product</option>
          <option value="artificial-lawn">Artificial Lawn</option>
          <option value="roller-shutters">Roller Shutters</option>
          <option value="outdoor-blinds">Outdoor Blinds</option>
          <option value="plantation-shutters">Plantation Shutters</option>
          <option value="multiple">Multiple Products</option>
        </select>
      </div>

      <div class="form-group">
        <label for="modal-message">Tell us about your project (optional)</label>
        <textarea id="modal-message" name="message" rows="4"></textarea>
      </div>

      <button type="submit" class="modal-submit-btn">
        Submit Request
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="5" y1="12" x2="19" y2="12"></line>
          <polyline points="12 5 19 12 12 19"></polyline>
        </svg>
      </button>

      <button type="button" class="view-data-toggle" id="viewDataToggle">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polyline points="9 18 15 12 9 6"></polyline>
        </svg>
        <span>View Captured Data Points</span>
      </button>

      <div class="captured-data-panel" id="capturedDataPanel">
        <h3>Data Being Captured</h3>
        <div class="data-content" id="dataContent">
          <p class="data-loading">Click "View Captured Data Points" to see all tracking information...</p>
        </div>
      </div>
    </form>
  </div>
</div>

<style>
  .quote-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 9999;
    display: none;
    align-items: center;
    justify-content: center;
    padding: 1rem;
  }

  .quote-modal.active {
    display: flex;
  }

  .modal-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.7);
    backdrop-filter: blur(4px);
    animation: fadeIn 0.3s ease;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  .modal-content {
    position: relative;
    background: var(--white);
    border-radius: var(--radius-lg);
    max-width: 600px;
    width: 100%;
    max-height: 90vh;
    overflow-y: auto;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
    animation: slideUp 0.4s ease;
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .modal-close {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0.5rem;
    border-radius: 50%;
    transition: all 0.3s ease;
    color: var(--black);
    z-index: 1;
  }

  .modal-close:hover {
    background: var(--light-sage);
    transform: rotate(90deg);
  }

  .modal-header {
    padding: 2.5rem 2rem 1.5rem;
    text-align: center;
    background: linear-gradient(135deg, var(--light-sage) 0%, var(--cream) 100%);
    border-radius: var(--radius-lg) var(--radius-lg) 0 0;
  }

  .modal-header h2 {
    font-size: 1.75rem;
    color: var(--olive-green);
    margin: 0 0 0.75rem 0;
    font-weight: 700;
  }

  .modal-header p {
    font-size: 0.9375rem;
    color: var(--black);
    margin: 0;
    opacity: 0.9;
    line-height: 1.5;
  }

  .modal-form {
    padding: 2rem;
  }

  .form-row {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  @media (min-width: 500px) {
    .form-row {
      grid-template-columns: 1fr 1fr;
    }
  }

  .form-group {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .form-group label {
    font-size: 0.875rem;
    font-weight: 600;
    color: var(--black);
  }

  .form-group input,
  .form-group select,
  .form-group textarea {
    padding: 0.875rem;
    border: 2px solid rgba(0, 0, 0, 0.1);
    border-radius: var(--radius-sm);
    font-size: 1rem;
    font-family: inherit;
    transition: all 0.3s ease;
    background: var(--white);
  }

  .form-group input:focus,
  .form-group select:focus,
  .form-group textarea:focus {
    outline: none;
    border-color: var(--olive-green);
    box-shadow: 0 0 0 3px rgba(90, 110, 69, 0.1);
  }

  .form-group textarea {
    resize: vertical;
    min-height: 100px;
  }

  .modal-submit-btn {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 1rem 2rem;
    background: var(--olive-green);
    color: var(--white);
    border: none;
    border-radius: var(--radius-sm);
    font-size: 1.0625rem;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: 1rem;
  }

  .modal-submit-btn:hover {
    background: #465331;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(90, 110, 69, 0.3);
  }

  .modal-submit-btn:active {
    transform: translateY(0);
  }

  .modal-submit-btn svg {
    transition: transform 0.3s ease;
  }

  .modal-submit-btn:hover svg {
    transform: translateX(4px);
  }

  .view-data-toggle {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    padding: 0.75rem;
    background: transparent;
    color: var(--olive-green);
    border: 2px dashed rgba(90, 110, 69, 0.3);
    border-radius: var(--radius-sm);
    font-size: 0.8125rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: 1rem;
  }

  .view-data-toggle:hover {
    background: rgba(90, 110, 69, 0.05);
    border-color: var(--olive-green);
  }

  .view-data-toggle svg {
    transition: transform 0.3s ease;
  }

  .view-data-toggle.active svg {
    transform: rotate(90deg);
  }

  .captured-data-panel {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.4s ease;
    margin-top: 1rem;
  }

  .captured-data-panel.active {
    max-height: 600px;
    overflow-y: auto;
  }

  .captured-data-panel h3 {
    font-size: 1rem;
    color: var(--olive-green);
    margin: 0 0 1rem 0;
    font-weight: 700;
  }

  .data-content {
    background: var(--light-sage);
    padding: 1rem;
    border-radius: var(--radius-sm);
    font-size: 0.8125rem;
    font-family: 'Monaco', 'Courier New', monospace;
  }

  .data-loading {
    color: rgba(0, 0, 0, 0.5);
    font-style: italic;
    text-align: center;
    margin: 0;
  }

  .data-section {
    margin-bottom: 1rem;
  }

  .data-section:last-child {
    margin-bottom: 0;
  }

  .data-section-title {
    font-weight: 700;
    color: var(--olive-green);
    margin-bottom: 0.5rem;
    font-size: 0.875rem;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .data-item {
    display: flex;
    gap: 0.5rem;
    margin-bottom: 0.25rem;
    line-height: 1.6;
  }

  .data-label {
    font-weight: 600;
    color: rgba(0, 0, 0, 0.7);
    min-width: 140px;
  }

  .data-value {
    color: rgba(0, 0, 0, 0.9);
    word-break: break-word;
  }

  /* Mobile adjustments */
  @media (max-width: 600px) {
    .modal-content {
      max-height: 95vh;
      border-radius: var(--radius-md);
    }

    .modal-header {
      padding: 2rem 1.5rem 1rem;
    }

    .modal-header h2 {
      font-size: 1.5rem;
    }

    .modal-header p {
      font-size: 0.875rem;
    }

    .modal-form {
      padding: 1.5rem;
    }

    .modal-submit-btn {
      font-size: 1rem;
      padding: 0.875rem 1.5rem;
    }
  }

  /* Prevent body scroll when modal is open */
  body.modal-open {
    overflow: hidden;
  }
</style>

<script>
  import { captureFormData, initializeSessionTracking } from '../utils/formTracking';

  // Initialize tracking
  initializeSessionTracking();

  const modal = document.getElementById('quoteModal');
  const modalOverlay = document.getElementById('modalOverlay');
  const modalClose = document.getElementById('modalClose');
  const modalForm = document.getElementById('modalQuoteForm');

  // Function to open modal
  function openModal() {
    if (modal) {
      modal.classList.add('active');
      document.body.classList.add('modal-open');
    }
  }

  // Function to close modal
  function closeModal() {
    if (modal) {
      modal.classList.remove('active');
      document.body.classList.remove('modal-open');
    }
  }

  // All buttons that should trigger the modal
  const triggerSelectors = [
    '#quoteBtn',
    '#floatingQuoteBtn',
    '.btn-primary[href*="quote"]',
    'button:contains("FREE MEASURE & QUOTE")',
    'a[href="#quote"]'
  ];

  // Add click listeners to all quote buttons
  document.addEventListener('click', (e) => {
    const target = e.target as HTMLElement;
    const button = target.closest('button, a') as HTMLElement;

    if (button) {
      const id = button.id;
      const text = button.textContent?.toUpperCase() || '';

      // Check if this is a quote button
      if (
        id === 'quoteBtn' ||
        id === 'floatingQuoteBtn' ||
        text.includes('FREE MEASURE') ||
        text.includes('GET A QUOTE') ||
        text.includes('REQUEST') ||
        button.classList.contains('quote-trigger')
      ) {
        e.preventDefault();
        openModal();
      }
    }
  });

  // Close modal when clicking overlay
  if (modalOverlay) {
    modalOverlay.addEventListener('click', closeModal);
  }

  // Close modal when clicking close button
  if (modalClose) {
    modalClose.addEventListener('click', closeModal);
  }

  // Close modal on Escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape' && modal?.classList.contains('active')) {
      closeModal();
    }
  });

  // Handle data viewer toggle
  const viewDataToggle = document.getElementById('viewDataToggle');
  const capturedDataPanel = document.getElementById('capturedDataPanel');
  const dataContent = document.getElementById('dataContent');

  if (viewDataToggle && capturedDataPanel && dataContent) {
    viewDataToggle.addEventListener('click', () => {
      const isActive = capturedDataPanel.classList.toggle('active');
      viewDataToggle.classList.toggle('active');

      if (isActive) {
        // Generate and display the captured data
        const mockLeadData = {
          name: 'Preview',
          email: 'preview@example.com',
          phone: '0400000000',
          suburb: 'Preview Suburb',
          product: 'Preview Product',
          message: 'Preview message'
        };

        const trackingData = captureFormData(mockLeadData, 'modalQuoteForm', 'quote-modal-form');

        dataContent.innerHTML = `
          <div class="data-section">
            <div class="data-section-title">📍 Page & Source</div>
            <div class="data-item"><span class="data-label">Source Page:</span><span class="data-value">${trackingData.tracking.sourcePage}</span></div>
            <div class="data-item"><span class="data-label">Page Title:</span><span class="data-value">${trackingData.tracking.pageTitle}</span></div>
            <div class="data-item"><span class="data-label">Referrer:</span><span class="data-value">${trackingData.tracking.referrer}</span></div>
            <div class="data-item"><span class="data-label">Landing Page:</span><span class="data-value">${trackingData.tracking.landingPage || 'N/A'}</span></div>
            <div class="data-item"><span class="data-label">Form ID:</span><span class="data-value">${trackingData.tracking.formId}</span></div>
          </div>

          <div class="data-section">
            <div class="data-section-title">🕒 Time & Session</div>
            <div class="data-item"><span class="data-label">Timestamp:</span><span class="data-value">${trackingData.tracking.submissionTimestamp}</span></div>
            <div class="data-item"><span class="data-label">Date:</span><span class="data-value">${trackingData.tracking.submissionDate}</span></div>
            <div class="data-item"><span class="data-label">Time:</span><span class="data-value">${trackingData.tracking.submissionTime}</span></div>
            <div class="data-item"><span class="data-label">Day:</span><span class="data-value">${trackingData.tracking.submissionDayOfWeek}</span></div>
            <div class="data-item"><span class="data-label">Timezone:</span><span class="data-value">${trackingData.tracking.timezone}</span></div>
            <div class="data-item"><span class="data-label">Time on Page:</span><span class="data-value">${trackingData.tracking.timeOnPage}s</span></div>
            ${trackingData.tracking.sessionDuration ? `<div class="data-item"><span class="data-label">Session Duration:</span><span class="data-value">${trackingData.tracking.sessionDuration}s</span></div>` : ''}
          </div>

          <div class="data-section">
            <div class="data-section-title">💻 Device & Browser</div>
            <div class="data-item"><span class="data-label">Device Type:</span><span class="data-value">${trackingData.tracking.deviceType}</span></div>
            <div class="data-item"><span class="data-label">Operating System:</span><span class="data-value">${trackingData.tracking.operatingSystem}</span></div>
            <div class="data-item"><span class="data-label">Browser:</span><span class="data-value">${trackingData.tracking.browser} ${trackingData.tracking.browserVersion}</span></div>
            <div class="data-item"><span class="data-label">Screen Resolution:</span><span class="data-value">${trackingData.tracking.screenResolution}</span></div>
            <div class="data-item"><span class="data-label">Viewport Size:</span><span class="data-value">${trackingData.tracking.viewportSize}</span></div>
            <div class="data-item"><span class="data-label">Language:</span><span class="data-value">${trackingData.tracking.language}</span></div>
          </div>

          <div class="data-section">
            <div class="data-section-title">📊 Behavior & Engagement</div>
            <div class="data-item"><span class="data-label">Scroll Depth:</span><span class="data-value">${trackingData.tracking.scrollDepth}%</span></div>
            ${trackingData.tracking.connectionType ? `<div class="data-item"><span class="data-label">Connection Type:</span><span class="data-value">${trackingData.tracking.connectionType}</span></div>` : ''}
            ${trackingData.tracking.gaClientId ? `<div class="data-item"><span class="data-label">GA Client ID:</span><span class="data-value">${trackingData.tracking.gaClientId}</span></div>` : ''}
          </div>

          ${trackingData.tracking.utmSource || trackingData.tracking.gclid || trackingData.tracking.fbclid ? `
          <div class="data-section">
            <div class="data-section-title">📢 Marketing Attribution</div>
            ${trackingData.tracking.utmSource ? `<div class="data-item"><span class="data-label">UTM Source:</span><span class="data-value">${trackingData.tracking.utmSource}</span></div>` : ''}
            ${trackingData.tracking.utmMedium ? `<div class="data-item"><span class="data-label">UTM Medium:</span><span class="data-value">${trackingData.tracking.utmMedium}</span></div>` : ''}
            ${trackingData.tracking.utmCampaign ? `<div class="data-item"><span class="data-label">UTM Campaign:</span><span class="data-value">${trackingData.tracking.utmCampaign}</span></div>` : ''}
            ${trackingData.tracking.utmTerm ? `<div class="data-item"><span class="data-label">UTM Term:</span><span class="data-value">${trackingData.tracking.utmTerm}</span></div>` : ''}
            ${trackingData.tracking.utmContent ? `<div class="data-item"><span class="data-label">UTM Content:</span><span class="data-value">${trackingData.tracking.utmContent}</span></div>` : ''}
            ${trackingData.tracking.gclid ? `<div class="data-item"><span class="data-label">Google Click ID:</span><span class="data-value">${trackingData.tracking.gclid}</span></div>` : ''}
            ${trackingData.tracking.fbclid ? `<div class="data-item"><span class="data-label">Facebook Click ID:</span><span class="data-value">${trackingData.tracking.fbclid}</span></div>` : ''}
            ${trackingData.tracking.fbp ? `<div class="data-item"><span class="data-label">Facebook Pixel:</span><span class="data-value">${trackingData.tracking.fbp}</span></div>` : ''}
          </div>
          ` : ''}
        `;

        viewDataToggle.querySelector('span')!.textContent = 'Hide Captured Data';
      } else {
        viewDataToggle.querySelector('span')!.textContent = 'View Captured Data Points';
      }
    });
  }

  // Handle form submission
  if (modalForm) {
    modalForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      const submitBtn = modalForm.querySelector('button[type="submit"]') as HTMLButtonElement;
      const originalText = submitBtn?.textContent || '';

      if (submitBtn) {
        submitBtn.disabled = true;
        submitBtn.textContent = 'SUBMITTING...';
      }

      try {
        const formData = new FormData(modalForm);
        const leadData = {
          name: formData.get('name') as string,
          email: formData.get('email') as string,
          phone: formData.get('phone') as string,
          suburb: formData.get('suburb') as string,
          product: formData.get('product') as string,
          message: formData.get('message') as string || undefined,
        };

        const submission = captureFormData(leadData, 'modalQuoteForm', 'quote-modal-form');

        const response = await fetch('/api/submit-lead', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(submission),
        });

        const result = await response.json();

        if (response.ok && result.success) {
          if (typeof gtag !== 'undefined') {
            gtag('event', 'generate_lead', {
              event_category: 'Form',
              event_label: 'quote-modal',
              value: 1
            });
          }

          closeModal();
          alert('Thank you! We\'ll contact you within 24 hours.');
          window.location.href = '/thank-you';
        } else {
          throw new Error(result.message || 'Submission failed');
        }
      } catch (error) {
        console.error('Form submission error:', error);
        alert('There was an error submitting your form. Please try calling us directly at 0448 243 979.');

        if (submitBtn) {
          submitBtn.disabled = false;
          submitBtn.textContent = originalText;
        }
      }
    });
  }
</script>
